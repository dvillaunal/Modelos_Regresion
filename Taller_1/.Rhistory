library(car)
library(rsm)
install.packages("rsm")
library(rsm)
library(rgl)
library(scatterplot3d)
library(GGally)
install.packages("GGally")
library(GGally)
ggplot2::theme_set(ggplot2::theme_bw())
#Cargando funciones de usuario desde repositorio en github
source("https://raw.githubusercontent.com/NelfiGonzalez/Regresion-DOE/main/FuncionesdeUsuarioRLM.R")
#Lectura de los datos desde archivo externo .csv
datos=read.table("https://raw.githubusercontent.com/NelfiGonzalez/Regresion-DOE/main/datosproblemaseleccionpersonal.csv",header=TRUE,sep=";",dec=",")
#O bien, ingreso de datos po teclado
#COL1="punt.Aptitud",COL2="Prueba1",COL3="Prueba2",COL4="Prueba3",COL5="Prueba4"
datos=data.frame(scan(what=list(punt.Aptitud=0,Prueba1=0,Prueba2=0,Prueba3=0,Prueba4=0)))
#O bien, ingreso de datos po teclado
#COL1="punt.Aptitud",COL2="Prueba1",COL3="Prueba2",COL4="Prueba3",COL5="Prueba4"
datos=data.frame(scan(what=list(punt.Aptitud=0,Prueba1=0,Prueba2=0,Prueba3=0,Prueba4=0)))
datos
attach(datos) #Permitir acceso a las variables del data.frame datos
attach(datos)
names(datos)
#Matriz de dispersión de alto nivel con histogramas en la diagonal
gg2<-ggpairs(datos,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
gg2
geom_histogram(breaks=hist(datos[,1],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,1],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
}
win.graph()
gg2
geom_histogram(breaks=hist(datos[,1],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
geom_histogram(breaks=hist(datos[,1],breaks = "FD",plot=T)$breaks,colour = "red",fill="lightgoldenrod1")
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
}
win.graph()
gg2
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
}
gg2
win.graph()
gg2
gg2
win.graph()
gg2
#Matriz de dispersión de alto nivel con histogramas en la diagonal
gg2<-ggpairs(datos,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
gg2
hist(datos[,i],breaks = "FD",plot=F)
datos
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
hist(datos[,1],breaks = "FD",plot=T)
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
}
win.graph()
#O bien, matriz de dispersion de alto nivel con boxplots en la diagonal
win.graph()
ggpairs(datos,diag=list(continuous=wrap("box_no_facet",color="red",fill="lightgoldenrod1",alpha=0.3)),upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
#Graficos de dispersion con plano ajustado de la respuesta vs. Prueba 1 y Prueba 2
#Grafico interactivo dinamico
scatter3d(punt.Aptitud~Prueba1+Prueba2,fov=60,revolutions=1)
#Graficos de dispersion con plano ajustado de la respuesta vs. Prueba 1 y Prueba 2
#Grafico interactivo dinamico
scatter3d(punt.Aptitud~Prueba1+Prueba2,fov=60,revolutions=1)
#grafico ordinario. Ejecute juntas las siguientes dos lineas de programa.
s3d.12=scatterplot3d(Prueba1,Prueba2,punt.Aptitud,cex.symbol=2,color=2,box=F,font.lab=4,font.axis=4)
s3d.12$plane3d(lm(punt.Aptitud~Prueba1+Prueba2), lty.box = "solid")
#Graficos de dispersion con plano ajustado de la respuesta vs. prueba 3 Prueba 4
#Grafico interactivo dinamico. Ver Figura 1.7
scatter3d(punt.Aptitud~Prueba3+Prueba4,fov=60,revolutions=1)
#Graficos de dispersion con plano ajustado de la respuesta vs. prueba 3 Prueba 4
#Grafico interactivo dinamico. Ver Figura 1.7
scatter3d(punt.Aptitud~Prueba3+Prueba4,fov=60,revolutions=1)
#Grafico ordinario. Ejecute juntas las siguientes dos lineas de programa.
s3d.34=scatterplot3d(Prueba3,Prueba4,punt.Aptitud,cex.symbol=2,color=2,box=F,font.lab=4,font.axis=4)
s3d.34$plane3d(lm(punt.Aptitud~Prueba3+Prueba4), lty.box = "solid")
#Tabla de correlaciones por pares sin repetir caso
correlaciones(data=datos)
#Exportando al directorio de trabajo tabla con correlaciones de las variables en el data.frame datos
write.csv2(correlaciones(data=datos),"tablacorrelaciones.csv",row.names=FALSE)
#Ajuste del MRLM: Formula extendida
modelo=lm(punt.Aptitud~Prueba1+Prueba2+Prueba3+Prueba4)
#O bien de la siguiente forma,
modelo=lm(punt.Aptitud~.,datos)
#Desplegando en la Consola la tabla de parametros estimados
summary(modelo)
#Exportando al directorio de trabajo la tabla de parametros estimados, a un archivo de nombre tablaestimacionMRLM.csv
write.csv2(summary(modelo)$coefficients,"tablaestimacionMRLM.csv",row.names=TRUE)
#Anova del modelo
tablaAnova=MiAnova(model=modelo)
#Exportando al directorio de trabajo la tabla ANOVA del modelo, al archivo de nombre tablaANOVAMRLM.csv
write.csv2(tablaAnova,"tablaANOVAMRLM.csv",row.names=TRUE)
#Grafico de dispersion con ajuste lineal y loess de la respuesta observada vs. la estimada
win.graph()
#Grafico de dispersion con ajuste lineal y loess de la respuesta observada vs. la estimada
win.graph()
scatterplot(fitted(modelo),punt.Aptitud,smooth=list(style="none",col.smooth=2),regLine=list(col=3),pch=19,cex=1.5,id=list(method="mahal", n=5, cex=1, col=carPalette()[-1]))
legend("topleft",legend=c(expression(paste("Ajuste lineal entre",sep=" ",Y,sep=", ",widehat(Y))),expression(paste("Ajuste loess entre",sep=" ",Y,sep=", ",widehat(Y)))),col=c(3,2),lty=c(1,2),lwd=2)
#Calculo del coeficiente de correlacion muestral entre la respueta estimada y la respuesta observada
cor(fitted(modelo),punt.Aptitud)
#graficos de variable agregada (added-variable plot) o graficos de regresion parcial (partial regression plot)
avPlots(modelo)
#graficos de residuos mas componente (residuals plus component plot)
crPlots(modelo)
detach(datos) #desanclando variables del data.frame
library(car)
library(rsm)
library(rgl)
library(scatterplot3d)
library(GGally)
ggplot2::theme_set(ggplot2::theme_bw())
#Cargando funciones de usuario desde repositorio en github
source("https://raw.githubusercontent.com/NelfiGonzalez/Regresion-DOE/main/FuncionesdeUsuarioRLM.R")
#Lectura de los datos desde archivo externo .csv
datos=read.table("https://raw.githubusercontent.com/NelfiGonzalez/Regresion-DOE/main/datosproblemaseleccionpersonal.csv",header=TRUE,sep=";",dec=",")
#O bien, ingreso de datos po teclado
#COL1="punt.Aptitud",COL2="Prueba1",COL3="Prueba2",COL4="Prueba3",COL5="Prueba4"
datos=data.frame(scan(what=list(punt.Aptitud=0,Prueba1=0,Prueba2=0,Prueba3=0,Prueba4=0)))
names(datos) #Revisando el nombre de las variables guardadas en el data.frame
datos
#Matriz de dispersión de alto nivel con histogramas en la diagonal
gg2<-ggpairs(datos,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(datos)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos[,i],breaks = "FD",plot=F)$breaks,colour = "red",fill="lightgoldenrod1")
}
win.graph()
win.graph()
gg2
#O bien, matriz de dispersion de alto nivel con boxplots en la diagonal
win.graph()
ggpairs(datos,diag=list(continuous=wrap("box_no_facet",color="red",fill="lightgoldenrod1",alpha=0.3)),upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
#Graficos de dispersion con plano ajustado de la respuesta vs. Prueba 1 y Prueba 2
#Grafico interactivo dinamico
scatter3d(punt.Aptitud~Prueba1+Prueba2,fov=60,revolutions=1)
#Graficos de dispersion con plano ajustado de la respuesta vs. Prueba 1 y Prueba 2
#Grafico interactivo dinamico
scatter3d(punt.Aptitud~Prueba1+Prueba2,fov=60,revolutions=1)
attach(datos) #Permitir acceso a las variables del data.frame datos
#Graficos de dispersion con plano ajustado de la respuesta vs. Prueba 1 y Prueba 2
#Grafico interactivo dinamico
scatter3d(punt.Aptitud~Prueba1+Prueba2,fov=60,revolutions=1)
#Ajuste del MRLM: Formula extendida
modelo=lm(punt.Aptitud~Prueba1+Prueba2+Prueba3+Prueba4)
modelo
#O bien de la siguiente forma,
modelo=lm(punt.Aptitud~.,datos)
#Desplegando en la Consola la tabla de parametros estimados
summary(modelo)
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
file.choose()
datos <- read.csv("C:\\Users\\Juan Carvajal\\OneDrive - Universidad Nacional de Colombia\\Material Universidad\\Regresion_pos\\Bases_de_datos\\boston.csv")
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
datos4
datos <- read.csv("C:\\Users\\Juan Carvajal\\OneDrive - Universidad Nacional de Colombia\\Material Universidad\\Regresion_pos\\Bases_de_datos\\boston.csv")
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
datos4
library(car)
library(rsm)
library(rgl)
library(scatterplot3d)
library(GGally)
gg2
datos <- read.csv("C:\\Users\\Juan Carvajal\\OneDrive - Universidad Nacional de Colombia\\Material Universidad\\Regresion_pos\\Bases_de_datos\\boston.csv")
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
gg2<-ggpairs(datos4,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(datos4)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos4[,i],breaks = "FD",plot=F)$breaks,colour = "tomato",fill="lightgoldenrod1")
}
gg2
#| message: false
#| warning: false
datos <- read.csv("C:\\Users\\Juan Carvajal\\OneDrive - Universidad Nacional de Colombia\\Material Universidad\\Regresion_pos\\Bases_de_datos\\boston.csv")
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
gg2<-ggpairs(datos4,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(datos4)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos4[,i],breaks = "FD",plot=F)$breaks,colour = "tomato",fill="lightgoldenrod1")
}
gg2
#| message: false
#| warning: false
datos <- read.csv("C:\\Users\\Juan Carvajal\\OneDrive - Universidad Nacional de Colombia\\Material Universidad\\Regresion_pos\\Bases_de_datos\\boston.csv")
datos4 <-datos[401:500,c(1,5,6,7,11,13,14)]
gg2<-ggpairs(datos4,upper=list(continuous = wrap("smooth",alpha = 0.3, size=1.2,method = "lm")),lower=list(continuous ="cor"))
for(i in 1:ncol(datos4)){
gg2[i,i]<-gg2[i,i]+
geom_histogram(breaks=hist(datos4[,i],breaks = "FD",plot=F)$breaks,colour = "tomato",fill="lightgoldenrod1")
}
gg2
shapiro.test(datos4$MEDV)
View(anovLOF)
gg2
---
title: "Taller RML (Parte 1) - Gr4"
install.packages("installr")
require(installr)
updateR()
